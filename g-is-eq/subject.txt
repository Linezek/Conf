Exercice __NUM__ : g-is-eq
__________________________

Nom de l'executable  :          g-is-eq
Nom du repertoire    :          __REP__
temps de realisation :          30 minutes
Languages            :          C, Perl
Fonctions autorisees :          (C uniquement) write, printf, malloc, free
Makefile	     :          oui (obligatoire meme en Perl ou PHP)


        Le programme prend en parametres deux chaines de caracteres.
        Si ces deux chaines de caracteres ne sont pas presentes, le
        programme affiche '\n'.
        Ces deux chaines sont des suites de liens entres differentes
        cellules.
        Les liens sont separes par un espace.
        Ces cellules sont representees par des chiffres et les liens
        symbolises par '-'.
        Si la cellule 2 est liee a la cellule 3, les representations seront
        les suivantes :
        soit - : "2-3".
        ou   - : "3-2".
        Les deux chaines representent deux graphes. Le programme devra
        verifier que les deux graphes sont equivalents.
        Si c'est le cas le programme devra afficher 1 suivi de '\n'.
        Sinon il affichera 0 suivi de '\n'.
        
        On dit que deux graphes sont equivalents si, ormi le nom des
        cellules, ils sont identiques.
        Exemple: 1-2 4-3 3-1 1-4 est equivalent a : 1-12 3-1 2-12 3-12
        alors que : 1-2 4-3 3-1 1-4 n'est pas equivalent a : 1-2 2-3 4-3 4-1

	Le Makefile est obligatoire meme si le programme est en Perl ou en PHP.
	Il est rappelle que la moulinette effacera l'executable avant de faire
	make. 

Exemple 1:
(jog@almarita)./g-is-eq "0-1 1-3 2-5 5-1 3-6 9-0 9-5 4-8 8-2" "2-5 6-2 12-5 6-12 19-12 5-17 17-21 14-19 14-42" | cat -e
1$

Exemple 2:
(jog@almarita)./g-is-eq "0-1 1-3 2-5 5-1 3-6 9-0 9-5 4-8 8-2" "2-5 63-2 12-5 6-12 19-21 5-17 17-12 14-19 41-42" | cat -e
0$
